name: Convert Issue to Markdown

on:
  workflow_dispatch:
    inputs:
      title:
        description: "The title of the issue"
        required: true
        default: "Default Title"
      body:
        description: "The body of the issue"
        required: true
        default: "Default Body"

jobs:
  create-markdown:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Convert issue to Markdown
        run: |
          echo "Converting issue to markdown..."
          # 이슈에서 전달받은 제목 및 본문
          ISSUE_TITLE="${{ github.event.inputs.title }}"
          ISSUE_BODY="${{ github.event.inputs.body }}"

          # 날짜 및 기존 파일 개수 기반으로 파일명 생성
          ISSUE_DATE=$(date +'%Y%m%d')
          ISSUE_COUNT=$(ls public/posts | grep $ISSUE_DATE | wc -l)
          FILE_NAME="public/posts/${ISSUE_DATE}_$((ISSUE_COUNT + 1)).md"

          # 마크다운 파일 생성
          echo "## $ISSUE_TITLE" > $FILE_NAME
          echo "" >> $FILE_NAME
          echo "$ISSUE_BODY" >> $FILE_NAME

      - name: Update posts.json
        run: |
          # 1) JSON 파일이 없는 경우 초기화 (비어있는 배열)
          if [ ! -f public/posts.json ]; then
            echo "[]" > public/posts.json
          fi

          # 2) 새 게시글에 부여할 id = (기존 JSON 배열 길이 + 1)
          NEW_ID=$(($(jq length public/posts.json) + 1))

          # 3) 날짜 (YYYY-MM-DD 형식)
          ISSUE_DATE_FORMATTED="${ISSUE_DATE:0:4}-${ISSUE_DATE:4:2}-${ISSUE_DATE:6:2}"

          # 4) 요약: 이슈 본문의 첫 줄
          #    첫 줄 추출 → IFS와 read를 사용해 처리
          FIRST_LINE=$(echo "${{ github.event.inputs.body }}" | sed -n 1p)

          # 5) jq로 새 레코드 추가
          NEW_JSON=$(jq ". += [{
            \"id\": $NEW_ID,
            \"filename\": \"$(basename $FILE_NAME)\",
            \"title\": \"$ISSUE_TITLE\",
            \"summary\": \"${FIRST_LINE}\",
            \"date\": \"$ISSUE_DATE_FORMATTED\"
          }]" public/posts.json)

          echo "$NEW_JSON" > public/posts.json

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add public/posts/*.md public/posts.json
          git commit -m "Add markdown file and update posts.json from issue"
          git push
